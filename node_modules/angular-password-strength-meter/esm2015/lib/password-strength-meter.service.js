/**
 * @fileoverview added by tsickle
 * Generated from: lib/password-strength-meter.service.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Injectable } from '@angular/core';
import * as zxcvbn_ from 'zxcvbn';
/** @type {?} */
const zxcvbn = zxcvbn_;
export class PasswordStrengthMeterService {
    constructor() { }
    /**
     *  this will return the password strength score in number
     *  0 - too guessable
     *  1 - very guessable
     *  2 - somewhat guessable
     *  3 - safely unguessable
     *  4 - very unguessable
     *
     * @param {?} password - Password
     * @return {?}
     */
    score(password) {
        /** @type {?} */
        const result = zxcvbn(password);
        return result.score;
    }
    /**
     * this will return the password strength score with feedback messages
     * return type { score: number; feedback: { suggestions: string[]; warning: string } }
     *
     * @param {?} password - Password
     * @return {?}
     */
    scoreWithFeedback(password) {
        /** @type {?} */
        const result = zxcvbn(password);
        return { score: result.score, feedback: result.feedback };
    }
}
PasswordStrengthMeterService.decorators = [
    { type: Injectable }
];
/** @nocollapse */
PasswordStrengthMeterService.ctorParameters = () => [];
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicGFzc3dvcmQtc3RyZW5ndGgtbWV0ZXIuc2VydmljZS5qcyIsInNvdXJjZVJvb3QiOiJuZzovL2FuZ3VsYXItcGFzc3dvcmQtc3RyZW5ndGgtbWV0ZXIvIiwic291cmNlcyI6WyJsaWIvcGFzc3dvcmQtc3RyZW5ndGgtbWV0ZXIuc2VydmljZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7OztBQUFBLE9BQU8sRUFBRSxVQUFVLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFFM0MsT0FBTyxLQUFLLE9BQU8sTUFBTSxRQUFRLENBQUM7O01BRTVCLE1BQU0sR0FBRyxPQUFPO0FBR3RCLE1BQU0sT0FBTyw0QkFBNEI7SUFDdkMsZ0JBQWUsQ0FBQzs7Ozs7Ozs7Ozs7O0lBWWhCLEtBQUssQ0FBQyxRQUFROztjQUNOLE1BQU0sR0FBRyxNQUFNLENBQUMsUUFBUSxDQUFDO1FBQy9CLE9BQU8sTUFBTSxDQUFDLEtBQUssQ0FBQztJQUN0QixDQUFDOzs7Ozs7OztJQVFELGlCQUFpQixDQUFDLFFBQVE7O2NBQ2xCLE1BQU0sR0FBRyxNQUFNLENBQUMsUUFBUSxDQUFDO1FBQy9CLE9BQU8sRUFBRSxLQUFLLEVBQUUsTUFBTSxDQUFDLEtBQUssRUFBRSxRQUFRLEVBQUUsTUFBTSxDQUFDLFFBQVEsRUFBRSxDQUFDO0lBQzVELENBQUM7OztZQTVCRixVQUFVIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgSW5qZWN0YWJsZSB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xyXG5cclxuaW1wb3J0ICogYXMgenhjdmJuXyBmcm9tICd6eGN2Ym4nO1xyXG5cclxuY29uc3QgenhjdmJuID0genhjdmJuXztcclxuXHJcbkBJbmplY3RhYmxlKClcclxuZXhwb3J0IGNsYXNzIFBhc3N3b3JkU3RyZW5ndGhNZXRlclNlcnZpY2Uge1xyXG4gIGNvbnN0cnVjdG9yKCkge31cclxuXHJcbiAgLyoqXHJcbiAgICogIHRoaXMgd2lsbCByZXR1cm4gdGhlIHBhc3N3b3JkIHN0cmVuZ3RoIHNjb3JlIGluIG51bWJlclxyXG4gICAqICAwIC0gdG9vIGd1ZXNzYWJsZVxyXG4gICAqICAxIC0gdmVyeSBndWVzc2FibGVcclxuICAgKiAgMiAtIHNvbWV3aGF0IGd1ZXNzYWJsZVxyXG4gICAqICAzIC0gc2FmZWx5IHVuZ3Vlc3NhYmxlXHJcbiAgICogIDQgLSB2ZXJ5IHVuZ3Vlc3NhYmxlXHJcbiAgICpcclxuICAgKiAgQHBhcmFtIHBhc3N3b3JkIC0gUGFzc3dvcmRcclxuICAgKi9cclxuICBzY29yZShwYXNzd29yZCk6IG51bWJlciB7XHJcbiAgICBjb25zdCByZXN1bHQgPSB6eGN2Ym4ocGFzc3dvcmQpO1xyXG4gICAgcmV0dXJuIHJlc3VsdC5zY29yZTtcclxuICB9XHJcblxyXG4gIC8qKlxyXG4gICAqIHRoaXMgd2lsbCByZXR1cm4gdGhlIHBhc3N3b3JkIHN0cmVuZ3RoIHNjb3JlIHdpdGggZmVlZGJhY2sgbWVzc2FnZXNcclxuICAgKiByZXR1cm4gdHlwZSB7IHNjb3JlOiBudW1iZXI7IGZlZWRiYWNrOiB7IHN1Z2dlc3Rpb25zOiBzdHJpbmdbXTsgd2FybmluZzogc3RyaW5nIH0gfVxyXG4gICAqXHJcbiAgICogQHBhcmFtIHBhc3N3b3JkIC0gUGFzc3dvcmRcclxuICAgKi9cclxuICBzY29yZVdpdGhGZWVkYmFjayhwYXNzd29yZCk6IHsgc2NvcmU6IG51bWJlcjsgZmVlZGJhY2s6IHsgc3VnZ2VzdGlvbnM6IHN0cmluZ1tdOyB3YXJuaW5nOiBzdHJpbmcgfSB9IHtcclxuICAgIGNvbnN0IHJlc3VsdCA9IHp4Y3ZibihwYXNzd29yZCk7XHJcbiAgICByZXR1cm4geyBzY29yZTogcmVzdWx0LnNjb3JlLCBmZWVkYmFjazogcmVzdWx0LmZlZWRiYWNrIH07XHJcbiAgfVxyXG59XHJcbiJdfQ==