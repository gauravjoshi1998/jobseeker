{"version":3,"sources":["ng://angular-password-strength-meter/lib/password-strength-meter.service.ts","ng://angular-password-strength-meter/lib/password-strength-meter.component.ts","ng://angular-password-strength-meter/lib/password-strength-meter.module.ts"],"names":["zxcvbn","zxcvbn_","PasswordStrengthMeterService","prototype","score","password","scoreWithFeedback","result","feedback","Injectable","PasswordStrengthMeterComponent","passwordStrengthMeterService","this","minPasswordLength","enableFeedback","colors","strengthChange","EventEmitter","passwordStrength","prevPasswordStrength","defaultColours","ngOnInit","ngOnChanges","changes","calculatePasswordStrength","length","emit","getMeterFillColor","strength","Component","args","selector","template","providers","Input","Output","PasswordStrengthMeterModule","NgModule","imports","CommonModule","declarations","exports"],"mappings":"6ZAIMA,EAASC,EAEfC,EAAA,WAEE,SAAAA,KA2BF,OAfEA,EAAAC,UAAAC,MAAA,SAAMC,GAEJ,OADeL,EAAOK,GACRD,OAShBF,EAAAC,UAAAG,kBAAA,SAAkBD,OACVE,EAASP,EAAOK,GACtB,MAAO,CAAED,MAAOG,EAAOH,MAAOI,SAAUD,EAAOC,+BA3BlDC,EAAAA,mDA6BDP,EA7BA,GCNAQ,EAAA,WA2CE,SAAAA,EACUC,GAAAC,KAAAD,6BAAAA,EAvBDC,KAAAC,kBAAoB,EAEpBD,KAAAE,gBAAiB,EAEjBF,KAAAG,OAAmB,GAElBH,KAAAI,eAAiB,IAAIC,EAAAA,aAE/BL,KAAAM,iBAA2B,KAE3BN,KAAAJ,SAAuD,KAE/CI,KAAAO,qBAAuB,KAEvBP,KAAAQ,eAAiB,CACvB,UACA,YACA,SACA,cACA,SAoDJ,OA7CEV,EAAAP,UAAAkB,SAAA,aAEAX,EAAAP,UAAAmB,YAAA,SAAYC,GACNA,EAAQlB,UACVO,KAAKY,6BAIDd,EAAAP,UAAAqB,0BAAR,WAEE,GAAKZ,KAAKP,SAEH,GAAIO,KAAKP,UAAYO,KAAKP,SAASoB,OAASb,KAAKC,kBACtDD,KAAKM,iBAAmB,OAExB,GAAIN,KAAKE,eAAgB,KACjBP,EAASK,KAAKD,6BAA6BL,kBAC/CM,KAAKP,UAEPO,KAAKM,iBAAmBX,EAAOH,MAC/BQ,KAAKJ,SAAWD,EAAOC,cAEvBI,KAAKM,iBAAmBN,KAAKD,6BAA6BP,MACxDQ,KAAKP,UAEPO,KAAKJ,SAAW,UAdlBI,KAAKM,iBAAmB,KAmBtBN,KAAKO,uBAAyBP,KAAKM,mBACrCN,KAAKI,eAAeU,KAAKd,KAAKM,kBAC9BN,KAAKO,qBAAuBP,KAAKM,mBAIrCR,EAAAP,UAAAwB,kBAAA,SAAkBC,GAChB,OAAKA,GAAYA,EAAW,GAAKA,EAAW,EACnChB,KAAKG,OAAO,GAAKH,KAAKG,OAAO,GAAKH,KAAKQ,eAAe,GAGxDR,KAAKG,OAAOa,GACfhB,KAAKG,OAAOa,GACZhB,KAAKQ,eAAeQ,wBA9E3BC,EAAAA,UAASC,KAAA,CAAC,CACTC,SAAU,0BACVC,SAAA,6mBAEAC,UAAW,CAAC/B,glCANLA,uCASNgC,EAAAA,iCAEAA,EAAAA,8BAEAA,EAAAA,sBAEAA,EAAAA,8BAEAC,EAAAA,UAiEHzB,EA5FA,GCAA,IAAA0B,EAAA,WAKA,SAAAA,KAK0C,2BALzCC,EAAAA,SAAQP,KAAA,CAAC,CACRQ,QAAS,CAACC,EAAAA,cACVC,aAAc,CAAC9B,GACf+B,QAAS,CAAC/B,OAE8B0B,EAV1C","sourcesContent":["import { Injectable } from '@angular/core';\r\n\r\nimport * as zxcvbn_ from 'zxcvbn';\r\n\r\nconst zxcvbn = zxcvbn_;\r\n\r\n@Injectable()\r\nexport class PasswordStrengthMeterService {\r\n  constructor() {}\r\n\r\n  /**\r\n   *  this will return the password strength score in number\r\n   *  0 - too guessable\r\n   *  1 - very guessable\r\n   *  2 - somewhat guessable\r\n   *  3 - safely unguessable\r\n   *  4 - very unguessable\r\n   *\r\n   *  @param password - Password\r\n   */\r\n  score(password): number {\r\n    const result = zxcvbn(password);\r\n    return result.score;\r\n  }\r\n\r\n  /**\r\n   * this will return the password strength score with feedback messages\r\n   * return type { score: number; feedback: { suggestions: string[]; warning: string } }\r\n   *\r\n   * @param password - Password\r\n   */\r\n  scoreWithFeedback(password): { score: number; feedback: { suggestions: string[]; warning: string } } {\r\n    const result = zxcvbn(password);\r\n    return { score: result.score, feedback: result.feedback };\r\n  }\r\n}\r\n","import {\r\n  Component,\r\n  OnInit,\r\n  Input,\r\n  OnChanges,\r\n  SimpleChanges,\r\n  Output,\r\n  EventEmitter\r\n} from '@angular/core';\r\n\r\nimport { PasswordStrengthMeterService } from './password-strength-meter.service';\r\n\r\n@Component({\r\n  selector: 'password-strength-meter',\r\n  templateUrl: './password-strength-meter.component.html',\r\n  styleUrls: ['./password-strength-meter.component.scss'],\r\n  providers: [PasswordStrengthMeterService]\r\n})\r\nexport class PasswordStrengthMeterComponent implements OnInit, OnChanges {\r\n  @Input() password: string;\r\n\r\n  @Input() minPasswordLength = 8;\r\n\r\n  @Input() enableFeedback = false;\r\n\r\n  @Input() colors: string[] = [];\r\n\r\n  @Output() strengthChange = new EventEmitter<number>();\r\n\r\n  passwordStrength: number = null;\r\n\r\n  feedback: { suggestions: string[]; warning: string } = null;\r\n\r\n  private prevPasswordStrength = null;\r\n\r\n  private defaultColours = [\r\n    'darkred',\r\n    'orangered',\r\n    'orange',\r\n    'yellowgreen',\r\n    'green'\r\n  ];\r\n\r\n  constructor(\r\n    private passwordStrengthMeterService: PasswordStrengthMeterService\r\n  ) {}\r\n\r\n  ngOnInit() {}\r\n\r\n  ngOnChanges(changes: SimpleChanges) {\r\n    if (changes.password) {\r\n      this.calculatePasswordStrength();\r\n    }\r\n  }\r\n\r\n  private calculatePasswordStrength() {\r\n    // TODO validation logic optimization\r\n    if (!this.password) {\r\n      this.passwordStrength = null;\r\n    } else if (this.password && this.password.length < this.minPasswordLength) {\r\n      this.passwordStrength = 0;\r\n    } else {\r\n      if (this.enableFeedback) {\r\n        const result = this.passwordStrengthMeterService.scoreWithFeedback(\r\n          this.password\r\n        );\r\n        this.passwordStrength = result.score;\r\n        this.feedback = result.feedback;\r\n      } else {\r\n        this.passwordStrength = this.passwordStrengthMeterService.score(\r\n          this.password\r\n        );\r\n        this.feedback = null;\r\n      }\r\n    }\r\n\r\n    // Only emit the passwordStrength if it changed\r\n    if (this.prevPasswordStrength !== this.passwordStrength) {\r\n      this.strengthChange.emit(this.passwordStrength);\r\n      this.prevPasswordStrength = this.passwordStrength;\r\n    }\r\n  }\r\n\r\n  getMeterFillColor(strength) {\r\n    if (!strength || strength < 0 || strength > 5) {\r\n      return this.colors[0] ? this.colors[0] : this.defaultColours[0];\r\n    }\r\n\r\n    return this.colors[strength]\r\n      ? this.colors[strength]\r\n      : this.defaultColours[strength];\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { PasswordStrengthMeterComponent } from './password-strength-meter.component';\r\n\r\n@NgModule({\r\n  imports: [CommonModule],\r\n  declarations: [PasswordStrengthMeterComponent],\r\n  exports: [PasswordStrengthMeterComponent]\r\n})\r\nexport class PasswordStrengthMeterModule {}\r\n"]}